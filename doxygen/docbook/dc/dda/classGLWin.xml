<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classGLWin" xml:lang="en-US">
<title>GLWin Class Reference</title>
<indexterm><primary>GLWin</primary></indexterm>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1a4fcd7f2dbc2680e0836af60d2d51b3e4"/>enum <emphasis role="strong">Inputs</emphasis> { 
<emphasis role="strong">INSERT</emphasis> = 260
, <emphasis role="strong">DEL</emphasis> = 261
, <emphasis role="strong">RARROW</emphasis> = 262
, <emphasis role="strong">LARROW</emphasis> = 263
, 
<emphasis role="strong">UPARROW</emphasis> = 265
, <emphasis role="strong">DOWNARROW</emphasis> = 264
, <emphasis role="strong">PAGEUP</emphasis> = 266
, <emphasis role="strong">PAGEDOWN</emphasis> = 267
, 
<emphasis role="strong">F1</emphasis> = 290
, <emphasis role="strong">F2</emphasis> = 291
, <emphasis role="strong">F3</emphasis> = 292
, <emphasis role="strong">F4</emphasis> = 293
, 
<emphasis role="strong">F5</emphasis> = 294
, <emphasis role="strong">F6</emphasis> = 295
, <emphasis role="strong">F7</emphasis> = 296
, <emphasis role="strong">F8</emphasis> = 297
, 
<emphasis role="strong">F9</emphasis> = 298
, <emphasis role="strong">F10</emphasis> = 299
, <emphasis role="strong">F11</emphasis> = 300
, <emphasis role="strong">F12</emphasis> = 301
, 
<emphasis role="strong">WHEELUP</emphasis> = 401
, <emphasis role="strong">WHEELDOWN</emphasis> = 399
, <emphasis role="strong">MOUSE0</emphasis> = 0
, <emphasis role="strong">MOUSE1</emphasis> = 1
, 
<emphasis role="strong">MOUSE2</emphasis> = 2
, <emphasis role="strong">MOUSE3</emphasis> = 3
, <emphasis role="strong">MOUSE4</emphasis> = 4
, <emphasis role="strong">PRESS</emphasis> = 8
, 
<emphasis role="strong">RELEASE</emphasis> = 0
, <emphasis role="strong">CTRL</emphasis> = 512
, <emphasis role="strong">SHIFT</emphasis> = 1024
, <emphasis role="strong">ALT</emphasis> = 2048
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a73f1af9a6f835761e248a3afea6dbcdc"/>enum class <emphasis role="strong">Security</emphasis> { <emphasis role="strong">SAFE</emphasis>
, <emphasis role="strong">RESTRICTED</emphasis>
, <emphasis role="strong">ASK</emphasis>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1a7f728376d24a2d888b3f6d72b20ab66c"/>float <emphasis role="strong">getTime</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac4ae111fb21d74f83195232e7a54b5b4"/>uint32_t <emphasis role="strong">lookupAction</emphasis> (const char actionName[])</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a6700a392492c68ae6b053676a23589d3"/>void <emphasis role="strong">setEvent</emphasis> (uint32_t e, uint32_t a)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a019dc737e7c3a4f207d312c8cc00e369"/>void <emphasis role="strong">setEvent</emphasis> (uint32_t key, uint32_t mod, uint32_t a)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a56d7f8279976ddb9db9405d15e5d0625"/>void <emphasis role="strong">setAction</emphasis> (uint32_t a, Action action)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a380a612654a626fdedee2a6db5de73c4"/>void <emphasis role="strong">loadBindings</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1adf97b7eeebc5adb1fd89c845f9e12ab7"/>uint32_t <emphasis role="strong">internalRegisterAction</emphasis> (const char name[], Security s, Action action)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a8ae3216277e01b816a1adc5661408ccc"/>void <emphasis role="strong">bind</emphasis> (uint32_t input, const char actionName[])</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a47e807be1d73b6219234213e48aa51d9"/>void <emphasis role="strong">bind</emphasis> (const char inputCmd[], const char actionName[])</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a96ad3f5eed843411215f3d404545ea50"/>double <emphasis role="strong">time</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a8ccd77f0bc1d2efa60273052ccc5ef0a"/>void <emphasis role="strong">setDt</emphasis> (double delta)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac738d46868acc7dcd0b6053fa32cd32a"/><emphasis role="strong">GLWin</emphasis> (uint32_t bgColor=0x000000FF, uint32_t fgColor=0xFFFFFFFF, const char title[]=nullptr, uint32_t exitAfter=0)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ad8599df8c900729fc46c726e8d8e3693"/><link linkend="_classGLWin_1ad8599df8c900729fc46c726e8d8e3693">GLWin</link> (uint32_t w, uint32_t h, uint32_t bgColor, uint32_t fgColor, const char title[], uint32_t exitAfter=0)</para>

<para>need to call setSize, startWindow manually </para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ad5f6dbdf25e27c0faf1cb988f422a74f"/><link linkend="_classTab">Tab</link> * <emphasis role="strong">currentTab</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a022fb7852382f08cc16a1fe5d3246c97"/>void <emphasis role="strong">setSize</emphasis> (uint32_t w, uint32_t h)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a58a6d0883dcb87171fd1ae8929fd0824"/>uint32_t <emphasis role="strong">getWidth</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a4e11ebcfef3e4c759934b7c5fddb5432"/>uint32_t <emphasis role="strong">getHeight</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a73de7daa281746d0c7ab6b68442e7f5e"/>virtual void <emphasis role="strong">init</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a30472cf05bc192017d8e2226dc67449b"/>void <emphasis role="strong">startWindow</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a70030bfa5ea46f9f2ea9180a301e20fe"/>virtual void <emphasis role="strong">render</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a586554d802974f0b1c40f36bcd876bf9"/>void <emphasis role="strong">addFontPath</emphasis> (std::string path, std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a272ae5e4412fe8dd2716da8d95ffa974"/>virtual void <emphasis role="strong">update</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a5047c4a71d9933a189b770c39b492f61"/>virtual void <emphasis role="strong">cleanup</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac1a624a590e5858865c5c9c364b1b06b"/>void <emphasis role="strong">resetAnim</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a7c64d9e710f5bfe2b012913df7c40d67"/>void <emphasis role="strong">setTime</emphasis> (float t)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac6c622381b5dc631186e4519872b1e28"/>void <emphasis role="strong">tick</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a8bcc37c2e3cc89efe8a784b0208994fc"/>void <emphasis role="strong">setEndTime</emphasis> (float t)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a98e5733ae7f2a7eb60286ce75db660a8"/>void <emphasis role="strong">setDesiredColor</emphasis> (const glm::vec3 &amp;c, float delta)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a47f3a31065cb7d79cc717e741fb93225"/>void <emphasis role="strong">random</emphasis> (glm::vec3 &amp;v)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ab1d51565c4a9b60db9ba012955d58e8c"/>void <emphasis role="strong">mainLoop</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae8b1c52aa5a656ec4d578edd22efe125"/>void <emphasis role="strong">setDirty</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae3f3021ccc74fa2d284ce7cf50e423a1"/>const <link linkend="_classStyle">Style</link> * <emphasis role="strong">getDefaultStyle</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1acde53d660e012038d3029dced236c059"/>const <link linkend="_classStyle">Style</link> * <emphasis role="strong">getGuiStyle</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1accd22987a090c90b6c6d4af267d4fbb9"/>const <link linkend="_classStyle">Style</link> * <emphasis role="strong">getGuiTextStyle</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ad0a92e82435d42a9cd3bef3deae951a9"/>const <link linkend="_classStyle">Style</link> * <emphasis role="strong">getMenuStyle</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae553f407928d9f559a336d98531d6d71"/>const <link linkend="_classStyle">Style</link> * <emphasis role="strong">getMenuTextStyle</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a286278218d6cd20739eb8a4deeff8e8e"/>const <link linkend="_classFont">Font</link> * <emphasis role="strong">getDefaultFont</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac397d7f544594ca2c00945e3e966709d"/>const <link linkend="_classFont">Font</link> * <emphasis role="strong">getGuiFont</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1afe3ed6562b36c0b6b5562ff87ddaf806"/>const <link linkend="_classFont">Font</link> * <emphasis role="strong">getMenuFont</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a6e81a06d981cfa6413c8e5c1ce5cadac"/>virtual void <emphasis role="strong">baseInit</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1abcd585a9b00fda644e9f978813ed59d9"/>void <emphasis role="strong">bind2DOrtho</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a0ef899daf30ff178fe33eab33fcc4ba0"/>void <emphasis role="strong">bind3D</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a2d508f5e09a9492fe423277a5ec4ad52"/>void <emphasis role="strong">clearSelected</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1afe85b97628466af57ac8d13cd8ce5c58"/>double <emphasis role="strong">getTime</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1ad52c9ccb696c8f0feed799248595f303"/>static int <emphasis role="strong">init</emphasis> (<link linkend="_classGLWin">GLWin</link> *g, uint32_t w, uint32_t h, uint32_t exitAfter=0)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a2212c4c385174fd8648c7dfda5cb536a"/>static int <emphasis role="strong">init</emphasis> (<link linkend="_classGLWin">GLWin</link> *g, uint32_t exitAfter=0)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a3e80825534b55ec3889b6323527e8066"/>static glm::mat4 * <emphasis role="strong">getProjection</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ad9c0404b22351a99f78507c5d59b9f95"/>static void <emphasis role="strong">classInit</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1abe45aab2560b1af2862febf75cf78060"/>static void <emphasis role="strong">classCleanup</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1affa1c747de4de1930c7690f3876f4688"/>static void <emphasis role="strong">quit</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae69580bf36d7e2aec8bdc967dbda36ba"/>static void <emphasis role="strong">refresh</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a397a56f133b67ce87a0fe3285e8c5e34"/>static void <emphasis role="strong">saveFrame</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a2bb81518b3b0d3b48b2f61abe15d2bff"/>static void <emphasis role="strong">resetCamera</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ad1c435012f559ec503d177d7990cb6a4"/>static void <emphasis role="strong">gotoStartTime</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a5d696dd2bd348a141cbccc5412ea570f"/>static void <emphasis role="strong">gotoEndTime</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a06525a82e6b40e1787cf2bf10f49162a"/>static void <emphasis role="strong">speedTime</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a8eb2c2364df641302aabf16022dbeb95"/>static void <emphasis role="strong">slowTime</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a5700a7fc05c96c02039af5b2f991c881"/>static void <emphasis role="strong">resetTimeDilation</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a45a3a2e61e3c79043641a1e40660aa7f"/>static void <emphasis role="strong">resetProjection3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1acbf248b592a19e2d4b50f45c88c8e7e6"/>static void <emphasis role="strong">zoomOut3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a367d8aceaea382b466de4ab9f621b361"/>static void <emphasis role="strong">zoomIn3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a416d4eb992721e80ba54b3523753c645"/>static void <emphasis role="strong">panRight3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a085ef29bca8d39c95997ce46adba8d93"/>static void <emphasis role="strong">panLeft3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1abf4f56070baaa82033153dabfe98a34e"/>static void <emphasis role="strong">panUp3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1af1a237a03217a7e76d47175fecbd272c"/>static void <emphasis role="strong">panDown3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a68453ccbe330ac01831f499e639c1769"/>static void <emphasis role="strong">selectObject3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a95dd2576b36b7b85e98fbac323025d80"/>static void <emphasis role="strong">addSelectObject3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aa49d22be8baf63fa3b51604cb27b5c69"/>static void <emphasis role="strong">toggleSelectObject3D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a529862dffc442c1ef4683ca3a92f5806"/>static void <emphasis role="strong">resetProjection2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a12c039fba6245673f41b0e13f63e98e5"/>static void <emphasis role="strong">zoomOut2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a4e3d2061fcabe78495537df286af2a6a"/>static void <emphasis role="strong">zoomIn2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a30699d2e89c7a3b34d65e412d7b93353"/>static void <emphasis role="strong">panRight2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ab9cdf5ce9a1a81375abc042fb8c04ff3"/>static void <emphasis role="strong">panLeft2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a555ad6485ebcb65e18c26ee7f1593d13"/>static void <emphasis role="strong">panUp2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1afed22b9f808f2461e421ca41b2f60b97"/>static void <emphasis role="strong">panDown2D</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1af76b8ff4929eb3ada3d1e89b41faf458"/>static void <emphasis role="strong">gotoTop</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a678699374acd810961c45f6f84855921"/>static void <emphasis role="strong">gotoBottom</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a3c60bb0bdb65f212ad015c060627816d"/>static void <emphasis role="strong">scrollUp</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a4394066a976c4f1e639f268d218445b1"/>static void <emphasis role="strong">scrollDown</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a121b6b913ec72891275493af1131a2f5"/>static void <emphasis role="strong">pageUp</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae49f84d9e80ff39c897c60fd2db27502"/>static void <emphasis role="strong">pageDown</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aacf9fff8533f6a25ad3f4e2b13101ce3"/>static void <emphasis role="strong">sectionUp</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aceb54b78f6760b48c31c580dbeab6b98"/>static void <emphasis role="strong">sectionDown</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a5ee4b45e2569347c64b05c2e3e85879b"/>static void <emphasis role="strong">playSound</emphasis> (<link linkend="_classGLWin">GLWin</link> *w, const char name[])</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a2542acaa5417e83b580e3aeda9dedf67"/>static void <emphasis role="strong">stopSound</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1accd04d7bb6fbdc5464a884956ab3b81f"/>static void <emphasis role="strong">pressOnWidget</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a09e6655f23399c6ae0a942f3313f2e62"/>static void <emphasis role="strong">releaseWidget</emphasis> (<link linkend="_classGLWin">GLWin</link> *w)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1a6b22b5b769c199eaab4a9ec03ed7336d"/>double <emphasis role="strong">mouseX</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1af280734615b0669af040ea30e3612240"/>double <emphasis role="strong">mouseY</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a59766e14e9580f323daa1eac93a133a6"/>float <emphasis role="strong">mousePressX</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a8c74cb2a3ac81e972ea250a655d8c0f6"/>float <emphasis role="strong">mousePressY</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a43c411ccb4e5a9bcd658537fdaa58022"/>bool <emphasis role="strong">dragMode</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a760b0bea7fc89e64161a055f544e60f7"/>int <emphasis role="strong">winXPos</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aa18f3ae4e71b61da3158c0b1ce977be0"/>int <emphasis role="strong">winYPos</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a959210189c886b746841820f51b21781"/>uint32_t <emphasis role="strong">width</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a11e06e6b79b42656a63e300f34a52605"/>uint32_t <emphasis role="strong">height</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a891a1c0f69664f8e0e75ee6eecd484dc"/>bool <emphasis role="strong">dirty</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ade8f7ddbc2d64f97011e4410b6eecab3"/>bool <emphasis role="strong">dirty2</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1adbbe7185394c331a27a383fe79916299"/>bool <emphasis role="strong">focused</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a90528e1fc8fe4505b751f46a8619a7f9"/>uint32_t <emphasis role="strong">exitAfter</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae66904dc55a2912a0468ad084d704254"/>uint32_t <emphasis role="strong">numActions</emphasis> [3]</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1a5a7d3577bf8f20d7900bba7d3e6ca1f3"/>constexpr static uint32_t <emphasis role="strong">COMMON_SHADER</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a1742c53250091edc381d461c7ed7c00d"/>constexpr static uint32_t <emphasis role="strong">PER_VERTEX_SHADER</emphasis> = 1</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a1da79739a7ef0dbcd9f7201c61f87a6e"/>constexpr static uint32_t <emphasis role="strong">TEXT_SHADER</emphasis> = 2</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a77fb92568d3cb6409ea673bd31259ac8"/>constexpr static uint32_t <emphasis role="strong">TEXTURE_SHADER</emphasis> = 3</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a43d982c3cb7a6c26361348ecddddfffb"/>constexpr static uint32_t <emphasis role="strong">CURSOR_SHADER</emphasis> = 4</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ac7bdbed43ff4aa183bf2ae23b5817214"/>constexpr static uint32_t <emphasis role="strong">MULTI_TEXTURE_SHADER</emphasis> = 5</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1acb01ecb1e1d573e0804fc763195d4077"/>static std::string <emphasis role="strong">baseDir</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ab174232198bd8233a1a5417a263b6b73"/>static uint32_t <emphasis role="strong">inputMap</emphasis> [32768]</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a0e2d5ae1dfe88cd7bff6878685b87089"/>static Action <emphasis role="strong">actionMap</emphasis> [4096]</para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ae6c1d9712b21d7660080d5349eae8641"/>static std::unordered_map&lt; std::string, int &gt; <emphasis role="strong">actionNameMap</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classGLWin_1af09ca53e46a2a06bef0a0aa1bdb11555"/><link linkend="_classStyle">Style</link> * <emphasis role="strong">defaultStyle</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a2a73ba1b9c3361d0b465c6a5e2ac2e3a"/><link linkend="_classStyle">Style</link> * <emphasis role="strong">guiStyle</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1ab8e79f06b554dbcb3c1ce7e623e6a7ce"/><link linkend="_classStyle">Style</link> * <emphasis role="strong">guiTextStyle</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a40fa112d89d2283781de43d3fedb041f"/><link linkend="_classStyle">Style</link> * <emphasis role="strong">menuStyle</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a7443b53954732325a42983a7cffdd735"/><link linkend="_classStyle">Style</link> * <emphasis role="strong">menuTextStyle</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aeef668eea7fce5495523cad91fb08b99"/><link linkend="_classFont">Font</link> * <emphasis role="strong">defaultFont</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1a275d763214fda285b309ba68c7a13c46"/><link linkend="_classFont">Font</link> * <emphasis role="strong">guiFont</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classGLWin_1aed9be7c5980524e8bc64c727168afe2f"/><link linkend="_classFont">Font</link> * <emphasis role="strong">menuFont</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
